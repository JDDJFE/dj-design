{"remainingRequest":"/Users/wangjunxia/work-github/dj-design/node_modules/babel-loader/lib/index.js!/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangjunxia/work-github/dj-design/packages/textarea/src/textarea.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangjunxia/work-github/dj-design/packages/textarea/src/textarea.vue","mtime":1673509764360},{"path":"/Users/wangjunxia/work-github/dj-design/babel.config.js","mtime":1660011372032},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdkalRleHRhcmVhJywKICBjb21wb25lbnRzOiB7fSwKICBwcm9wczogewogICAgdmFsdWU6IFN0cmluZywKICAgIG5hbWU6IFN0cmluZywKICAgIHJvd3M6IE51bWJlciwKICAgIGNvbHM6IE51bWJlciwKICAgIHBsYWNlaG9sZGVyOiBTdHJpbmcsCiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHJlYWRvbmx5OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgYXV0b2ZvY3VzOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgbWF4bGVuZ3RoOiBOdW1iZXIsCiAgICBieXRlbGVuZ3RoOiBOdW1iZXIsCiAgICBzaG93bWF4bGVuZ3RoOiBCb29sZWFuLAogICAgZnVuaW5wdXQ6IEZ1bmN0aW9uCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZhbDogdGhpcy52YWx1ZSB8fCAnJwogICAgfTsKICB9LAoKICBjb21wdXRlZDoge30sCiAgd2F0Y2g6IHsKICAgIHZhbHVlOiBmdW5jdGlvbiAobiwgbykgewogICAgICBpZiAodGhpcy52YWx1ZSAhPSB0aGlzLnZhbCkgewogICAgICAgIHRoaXMudmFsID0gdGhpcy52YWx1ZTsKICAgICAgfQogICAgfSwKICAgIHZhbDogZnVuY3Rpb24gKG4sIG8pIHsKICAgICAgdGhpcy4kZW1pdCh0aGlzLnZhbCk7CiAgICB9CiAgfSwKCiAgbW91bnRlZCgpIHt9LAoKICBtZXRob2RzOiB7CiAgICBmb2N1cygpIHsKICAgICAgdGhpcy4kcmVmcy50ZXh0YXJlYS5mb2N1cygpOwogICAgfSwKCiAgICBibHVyKCkgewogICAgICB0aGlzLiRyZWZzLnRleHRhcmVhLmJsdXIoKTsKICAgIH0sCgogICAgc2VsZWN0KCkgewogICAgICB0aGlzLiRyZWZzLnRleHRhcmVhLnNlbGVjdCgpOwogICAgfSwKCiAgICBoYW5kRXZlbnQodHlwZSwgJGV2ZW50KSB7CiAgICAgIGlmICh0eXBlID09ICdpbnB1dCcpIHsKICAgICAgICBpZiAodGhpcy5ieXRlbGVuZ3RoKSB7CiAgICAgICAgICB0aGlzLnZhbCA9ICRldmVudC50YXJnZXQudmFsdWUgPSB0aGlzLmdldEJ5dGVMZW5ndGgoJGV2ZW50LnRhcmdldC52YWx1ZSwgdGhpcy5ieXRlbGVuZ3RoKTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLmZ1bmlucHV0KSB7CiAgICAgICAgICB0aGlzLnZhbCA9ICRldmVudC50YXJnZXQudmFsdWUgPSB0aGlzLmZ1bmlucHV0KCRldmVudC50YXJnZXQudmFsdWUpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHR5cGUgPT0gJ2lucHV0JyB8fCB0eXBlID09ICdjaGFuZ2UnKSB7CiAgICAgICAgdGhpcy4kZW1pdCh0eXBlLCB0aGlzLnZhbCwgJGV2ZW50KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRlbWl0KHR5cGUsICRldmVudCk7CiAgICAgIH0KICAgIH0sCgogICAgZ2V0Qnl0ZUxlbmd0aChzdHIsIGxlbmd0aCkgewogICAgICBsZXQgYnl0ZUxlbmd0aCA9IDA7CiAgICAgIGxldCBieXRlU3RyID0gJyc7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykgewogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250cm9sLXJlZ2V4CiAgICAgICAgaWYgKHN0cltpXS5tYXRjaChuZXcgUmVnRXhwKCdbXlx4MDAtXHhmZl0nLCAnaWcnKSkpIHsKICAgICAgICAgIGJ5dGVMZW5ndGggKz0gMjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgYnl0ZUxlbmd0aCArPSAxOwogICAgICAgIH0KCiAgICAgICAgaWYgKGJ5dGVMZW5ndGggPD0gbGVuZ3RoKSB7CiAgICAgICAgICBieXRlU3RyICs9IHN0cltpXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gYnl0ZVN0cjsKICAgIH0sCgogICAgZ2V0TGVuZ3RoKHN0cikgewogICAgICBsZXQgYnl0ZUxlbmd0aCA9IDA7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykgewogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250cm9sLXJlZ2V4CiAgICAgICAgaWYgKHN0cltpXS5tYXRjaChuZXcgUmVnRXhwKCdbXlx4MDAtXHhmZl0nLCAnaWcnKSkpIHsKICAgICAgICAgIGJ5dGVMZW5ndGggKz0gMjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgYnl0ZUxlbmd0aCArPSAxOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGJ5dGVMZW5ndGg7CiAgICB9CgogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;AAaA;EACAA,kBADA;EAEAC,cAFA;EAGAC;IACAC,aADA;IAEAH,YAFA;IAGAI,YAHA;IAIAC,YAJA;IAKAC,mBALA;IAMAC;MACAC,aADA;MAEAC;IAFA,CANA;IAUAC;MACAF,aADA;MAEAC;IAFA,CAVA;IAcAE;MACAH,aADA;MAEAC;IAFA,CAdA;IAkBAG,iBAlBA;IAmBAC,kBAnBA;IAoBAC,sBApBA;IAqBAC;EArBA,CAHA;;EA0BAC;IACA;MACAC;IADA;EAGA,CA9BA;;EA+BAC,YA/BA;EAiCAC;IACAhB;MACA;QACA;MACA;IACA,CALA;IAMAc;MACA;IACA;EARA,CAjCA;;EA2CAG,WACA,CA5CA;;EA6CAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;IACA,CANA;;IAOAC;MACA;IACA,CATA;;IAUAC;MACA;QACA;UACA;QACA;;QACA;UACA;QACA;MACA;;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA,CAxBA;;IAyBAC;MACA;MACA;;MACA;QACA;QACA;UACAC;QACA,CAFA,MAEA;UACAA;QACA;;QACA;UACAC;QACA,CAFA,MAEA;UACA;QACA;MACA;;MACA;IACA,CA1CA;;IA2CAC;MACA;;MACA;QACA;QACA;UACAF;QACA,CAFA,MAEA;UACAA;QACA;MACA;;MACA;IACA;;EAtDA;AA7CA","names":["name","components","props","value","rows","cols","placeholder","disabled","type","default","readonly","autofocus","maxlength","bytelength","showmaxlength","funinput","data","val","computed","watch","mounted","methods","focus","blur","select","handEvent","getByteLength","byteLength","byteStr","getLength"],"sourceRoot":"packages/textarea/src","sources":["textarea.vue"],"sourcesContent":["<template>\n  <div :class=\"['dj-textarea']\">\n    <textarea v-model=\"val\" ref=\"textarea\" :class=\"[{'disabled': disabled}]\" :name=\"name\" :rows=\"rows\" :cols=\"cols\" :readonly=\"readonly\" :autofocus=\"autofocus\" :disabled=\"disabled\" :placeholder=\"placeholder\" :maxlength=\"maxlength\"\n    @input=\"handEvent('input', $event)\" @change=\"handEvent('change', $event)\" @focus=\"handEvent('focus', $event)\" @blur=\"handEvent('blur', $event)\"></textarea>\n    <span v-if=\"showmaxlength\" class=\"textarea-length\">\n      <template v-if=\"bytelength\">{{getLength(val)}}/{{bytelength}}</template>\n      <template v-else-if=\"maxlength\">{{val.length}}/{{maxlength}}</template>\n    </span>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'djTextarea',\n  components: {},\n  props: {\n    value: String,\n    name: String,\n    rows: Number,\n    cols: Number,\n    placeholder: String,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    autofocus: {\n      type: Boolean,\n      default: false\n    },\n    maxlength: Number,\n    bytelength: Number,\n    showmaxlength: Boolean,\n    funinput: Function\n  },\n  data() {\n    return {\n      val: this.value || ''\n    };\n  },\n  computed: {\n  },\n  watch: {\n    value: function(n, o) {\n      if (this.value != this.val) {\n        this.val = this.value;\n      }\n    },\n    val: function(n, o) {\n      this.$emit(this.val);\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    focus() {\n      this.$refs.textarea.focus();\n    },\n    blur() {\n      this.$refs.textarea.blur();\n    },\n    select() {\n      this.$refs.textarea.select();\n    },\n    handEvent(type, $event){\n      if (type == 'input') {\n        if (this.bytelength) {\n          this.val = $event.target.value = this.getByteLength($event.target.value, this.bytelength);\n        }\n        if (this.funinput) {\n          this.val = $event.target.value = this.funinput($event.target.value);\n        }\n      }\n      if (type == 'input' || type == 'change') {\n        this.$emit(type, this.val, $event);\n      } else {\n        this.$emit(type, $event);\n      }\n    },\n    getByteLength(str, length) {\n      let byteLength = 0;\n      let byteStr = '';\n      for (var i = 0; i < str.length; i++) {\n        // eslint-disable-next-line no-control-regex\n        if (str[i].match(new RegExp('[^\\x00-\\xff]', 'ig'))) {\n          byteLength += 2;\n        } else {\n          byteLength += 1;\n        }\n        if (byteLength <= length) {\n          byteStr += str[i];\n        } else {\n          break;\n        }\n      }\n      return byteStr;\n    },\n    getLength(str) {\n      let byteLength = 0;\n      for (var i = 0; i < str.length; i++) {\n        // eslint-disable-next-line no-control-regex\n        if (str[i].match(new RegExp('[^\\x00-\\xff]', 'ig'))) {\n          byteLength += 2;\n        } else {\n          byteLength += 1;\n        }\n      }\n      return byteLength;\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"]}]}
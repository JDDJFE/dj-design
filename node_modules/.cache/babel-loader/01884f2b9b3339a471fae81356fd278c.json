{"remainingRequest":"/Users/wangjunxia/work-github/dj-design/node_modules/babel-loader/lib/index.js!/Users/wangjunxia/work-github/dj-design/node_modules/raw-loader/dist/cjs.js!/Users/wangjunxia/work-github/dj-design/node_modules/eslint-loader/index.js??ref--14-0!/Users/wangjunxia/work-github/dj-design/example/json/index.jsx","dependencies":[{"path":"/Users/wangjunxia/work-github/dj-design/example/json/index.jsx","mtime":1673509764282},{"path":"/Users/wangjunxia/work-github/dj-design/babel.config.js","mtime":1660011372032},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/raw-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":[],"sources":["/Users/wangjunxia/work-github/dj-design/example/json/index.jsx"],"sourcesContent":["export default \"export default {\\n  title: 'JSON 编辑器',\\n  templates: [\\n    {\\n      title: '基本用法',\\n      template: `\\n        主题\\n        <dj-select class=\\\"ml10 mb10\\\" v-model=\\\"theme\\\" name=\\\"lala\\\" size=\\\"small\\\">\\n          <dj-option v-for=\\\"(val,i) in list\\\" :value=\\\"val\\\" :label=\\\"val\\\"></dj-option>\\n        </dj-select>\\n        <dj-select class=\\\"ml10 mb10\\\" v-model=\\\"language\\\" @change=\\\"languagechange\\\">\\n          <dj-option v-for=\\\"item in mapArray\\\" :value='item.modeId' :label=\\\"item.name\\\"></dj-option>\\n        </dj-select>\\n        <div class=\\\"ml10 disInB\\\" style=\\\"line-height: 36px\\\">language: {{language}}</div>\\n        <dj-button class=\\\"ml10\\\" size=\\\"small\\\" @click=\\\"setJson\\\">改数据</dj-button>\\n        <dj-button class=\\\"ml10\\\" size=\\\"small\\\" @click=\\\"getJson\\\">获取数据</dj-button>\\n        <dj-button class=\\\"ml10\\\" size=\\\"small\\\" @click=\\\"readOnlyFun\\\">只读</dj-button>只读{{readOnly}}\\n        <dj-json ref=\\\"json\\\" v-model=\\\"jsonStr\\\" :theme=\\\"theme\\\" :language=\\\"language\\\" @languageList=\\\"languageList\\\"\\n                 height=\\\"300px\\\" :configParams=\\\"{readOnly: readOnly}\\\"/>`,\\n      data: {\\n        data() {\\n          return {\\n            readOnly: false,\\n            language: '',\\n            mapArray: [],\\n            theme: '',\\n            jsonStr: 'var SpringUtil = com.jd.o2o.rcc.service.util.spring.SpringUtil;\\\\nvar ArrayList = java.util.ArrayList;\\\\nvar Integer = java.lang.Integer;\\\\nvar syncConfigManager = SpringUtil.getBean(\\\"scriptSyncConfig\\\");\\\\n\\\\nfunction main() {\\\\n\\\\n  \\\\n   var hitRuleCodeList = result.get(\\\"hitRuleCodeList\\\");\\\\n   // 默认无风险  riskValue 只有10  和 -10  两个值；  10 表示有风险  -10 表示无风险\\\\n   result.put(\\\"riskValue\\\", new java.lang.Integer(-10));\\\\n\\\\n   if(hitRuleCodeList.size() > 0) {\\\\n      result.put(\\\"riskValue\\\", new java.lang.Integer(10));\\\\n\\\\n      var hitRuleConfig = syncConfigManager.getRuleConfig(finalHitCode);\\\\n      if (hitRuleConfig != null) {\\\\n          var riskLevel = hitRuleConfig.getRiskLevel();\\\\n          result.put(\\\"riskLevel\\\", riskLevel * 100);\\\\n      }\\\\n      JsLog.writeErr(result, \\\"用户发起活动命中返回结果：\\\");\\\\n   }\\\\n\\\\n  JsLog.writeWarn(result, \\\"用户发起活动风险校验返完成，返回结果：\\\");\\\\n}\\\\n\\\\nmain();',\\n            list: [\\n              '3024-day',\\n              '3024-night',\\n              'abcdef',\\n              'ambiance',\\n              'ambiance-mobile',\\n              'ayu-dark',\\n              'ayu-mirage',\\n              'base16-dark',\\n              'base16-light',\\n              'bespin',\\n              'blackboard',\\n              'cobalt',\\n              'colorforth',\\n              'darcula',\\n              'dracula',\\n              'duotone-dark',\\n              'duotone-light',\\n              'eclipse',\\n              'elegant',\\n              'erlang-dark',\\n              'gruvbox-dark',\\n              'hopscotch',\\n              'icecoder',\\n              'idea',\\n              'isotope',\\n              'lesser-dark',\\n              'liquibyte',\\n              'lucario',\\n              'material',\\n              'material-darker',\\n              'material-palenight',\\n              'material-ocean',\\n              'material-palenight',\\n              'mbo',\\n              'mdn-like',\\n              'midnight',\\n              'monokai',\\n              'moxer',\\n              'neat',\\n              'neo',\\n              'night',\\n              'nord',\\n              'oceanic-next',\\n              'panda-syntax',\\n              'paraiso-dark',\\n              'paraiso-light',\\n              'pastel-on-dark',\\n              'railscasts',\\n              'rubyblue',\\n              'seti',\\n              'shadowfox',\\n              'solarized',\\n              'ssms',\\n              'the-matrix',\\n              'tomorrow-night-bright',\\n              'tomorrow-night-eighties',\\n              'ttcn',\\n              'twilight',\\n              'vibrant-ink',\\n              'xq-dark',\\n              'xq-light',\\n              'yeti',\\n              'yonce',\\n              'zenburn'\\n            ]\\n          };\\n        },\\n        methods: {\\n          readOnlyFun() {\\n            this.readOnly = !this.readOnly;\\n          },\\n          setJson() {\\n            this.jsonStr = 'aa';\\n          },\\n          getJson() {\\n            console.log(this.list.length, this.jsonStr);\\n          },\\n          languageList(val) {\\n            this.mapArray = val;\\n            // console.log(this.mapArray, 'languageList');\\n          },\\n          languagechange(val, obj) {\\n            console.log(val, obj, 'languagechange');\\n          }\\n        }\\n      }\\n    },\\n    {\\n      title: '行标记 & 行高亮',\\n      template: `\\n        <dj-json v-model=\\\"jsonStr\\\" :configParams=\\\"configParams\\\"/>`,\\n      data: {\\n        data() {\\n          return {\\n            configParams: {\\n              selectionLine: [\\n                {start: {line: 10, ch: 0}, end: {line: 11, ch: 0}}\\n              ],\\n              gutterMarker: [\\n                {line: 0, color: 'orange', innerHTML: '△'},\\n                {line: 3, color: '#4c72dc', innerHTML: '<i class=\\\"iconfont notification\\\"></i>'},\\n                {line: 6, color: 'pink', innerHTML: '<i class=\\\"iconfont home\\\"></i>'}\\n              ],\\n              markText: [\\n                {start: {line: 0, ch: 0}, end: {line: 2, ch: 0}, element: {className: 'errorHighlight'}},\\n                {start: {line: 3, ch: 0}, end: {line: 6, ch: 0}, element: {className: 'errorHighlight'}},\\n                {start: {line: 13, ch: 0}, end: {line: 16, ch: 0}, element: {className: 'errorHighlight'}}\\n              ]\\n            },\\n            jsonStr: 'var SpringUtil = com.jd.o2o.rcc.service.util.spring.SpringUtil;\\\\nvar ArrayList = java.util.ArrayList;\\\\nvar Integer = java.lang.Integer;\\\\nvar syncConfigManager = SpringUtil.getBean(\\\"scriptSyncConfig\\\");\\\\n\\\\nfunction main() {\\\\n\\\\n  \\\\n   var hitRuleCodeList = result.get(\\\"hitRuleCodeList\\\");\\\\n   // 默认无风险  riskValue 只有10  和 -10  两个值；  10 表示有风险  -10 表示无风险\\\\n   result.put(\\\"riskValue\\\", new java.lang.Integer(-10));\\\\n\\\\n   if(hitRuleCodeList.size() > 0) {\\\\n      result.put(\\\"riskValue\\\", new java.lang.Integer(10));\\\\n\\\\n      var hitRuleConfig = syncConfigManager.getRuleConfig(finalHitCode);\\\\n      if (hitRuleConfig != null) {\\\\n          var riskLevel = hitRuleConfig.getRiskLevel();\\\\n          result.put(\\\"riskLevel\\\", riskLevel * 100);\\\\n      }\\\\n      JsLog.writeErr(result, \\\"用户发起活动命中返回结果：\\\");\\\\n   }\\\\n\\\\n  JsLog.writeWarn(result, \\\"用户发起活动风险校验返完成，返回结果：\\\");\\\\n}\\\\n\\\\nmain();'\\n          };\\n        },\\n        methods: {\\n          getJson() {\\n            console.log(this.list.length, this.jsonStr);\\n          }\\n        }\\n      }\\n    },\\n    /* {\\n      title: '视图到某行 & 焦点到某行',\\n      template: `\\n        <dj-json v-model=\\\"jsonStr\\\"\\n                 :setCursorLine=\\\"setCursorLine\\\"\\n                 :scrollIntoView=\\\"scrollIntoView\\\"\\n        />`,\\n      data: {\\n        data() {\\n          return {\\n            scrollIntoView: {line: 23, ch: 0},\\n            setCursorLine: {line: 23, ch: 0},\\n            jsonStr: 'var SpringUtil = com.jd.o2o.rcc.service.util.spring.SpringUtil;\\\\nvar ArrayList = java.util.ArrayList;\\\\nvar Integer = java.lang.Integer;\\\\nvar syncConfigManager = SpringUtil.getBean(\\\"scriptSyncConfig\\\");\\\\n\\\\nfunction main() {\\\\n\\\\n  \\\\n   var hitRuleCodeList = result.get(\\\"hitRuleCodeList\\\");\\\\n   // 默认无风险  riskValue 只有10  和 -10  两个值；  10 表示有风险  -10 表示无风险\\\\n   result.put(\\\"riskValue\\\", new java.lang.Integer(-10));\\\\n\\\\n   if(hitRuleCodeList.size() > 0) {\\\\n      result.put(\\\"riskValue\\\", new java.lang.Integer(10));\\\\n\\\\n      var hitRuleConfig = syncConfigManager.getRuleConfig(finalHitCode);\\\\n      if (hitRuleConfig != null) {\\\\n          var riskLevel = hitRuleConfig.getRiskLevel();\\\\n          result.put(\\\"riskLevel\\\", riskLevel * 100);\\\\n      }\\\\n      JsLog.writeErr(result, \\\"用户发起活动命中返回结果：\\\");\\\\n   }\\\\n\\\\n  JsLog.writeWarn(result, \\\"用户发起活动风险校验返完成，返回结果：\\\");\\\\n}\\\\n\\\\nmain();'\\n          };\\n        },\\n        methods: {\\n          getJson() {\\n            console.log(this.list.length, this.jsonStr);\\n          }\\n        }\\n      }\\n    },*/\\n    {\\n      title: '代码对比 & 左侧只读',\\n      template: `\\n        <dj-button class=\\\"mb10\\\" size=\\\"small\\\" @click=\\\"getJson\\\">获取数据</dj-button>\\n        <dj-button class=\\\"mb10\\\" size=\\\"small\\\" @click=\\\"updateFun\\\">更改数据1</dj-button>\\n        <dj-button class=\\\"mb10\\\" size=\\\"small\\\" @click=\\\"updateFun2\\\">更改数据2</dj-button>\\n        <dj-button class=\\\"ml10\\\" size=\\\"small\\\" @click=\\\"readOnlyFun\\\">只读</dj-button>只读{{readOnly}}\\n        <dj-json ref=\\\"json\\\" v-model=\\\"jsonStr\\\" :valueLeft=\\\"jsonStrLeft\\\" diff height=\\\"200px\\\" :language=\\\"language\\\"\\n                 :configParams=\\\"configParams\\\" :leftConfig=\\\"leftConfig\\\" @codeChange=\\\"codeChange\\\"/>`,\\n      data: {\\n        data() {\\n          return {\\n            readOnly: false,\\n            configParams: {\\n              readOnly: false,\\n              markText: [\\n                {start: {line: 3, ch: 0}, end: {line: 6, ch: 0}, element: {className: 'errorHighlight'}},\\n                {start: {line: 13, ch: 0}, end: {line: 16, ch: 0}, element: {className: 'errorHighlight'}}\\n              ],\\n              selectionLine: [\\n                {start: {line: 10, ch: 0}, end: {line: 11, ch: 0}}\\n              ],\\n              gutterMarker: [\\n                {line: 3, color: 'pink', innerHTML: '<i class=\\\"iconfont notification\\\"></i>'},\\n                {line: 6, color: '#6a5fce', innerHTML: '<i class=\\\"iconfont home\\\"></i>'}\\n              ]\\n            },\\n            leftConfig: {\\n              readOnly: false,\\n              markText: [\\n                {start: {line: 1, ch: 0}, end: {line: 2, ch: 0}, element: {className: 'errorHighlight'}}\\n              ],\\n              selectionLine: [\\n                {start: {line: 12, ch: 0}, end: {line: 13, ch: 0}}\\n              ],\\n              gutterMarker: [\\n                {line: 0, color: 'orange', innerHTML: '△'}\\n              ]\\n            },\\n            language: 'apl',\\n            jsonStrLeft: 'var SpringUtil = com.jd.o2o.rcc.service.util.spring.SpringUtil;\\\\nvar ArrayList = java.util.ArrayList;\\\\nvar Integer = java.lang.Integer;\\\\nvar syncConfigManager = SpringUtil.getBean(\\\"scriptSyncConfig\\\");\\\\n\\\\nfunction main() {\\\\n  \\\\n   var hitRuleCodeList = result.get(\\\"hitRuleCodeList\\\");\\\\n   // 默认无风险  riskValue 只有10  和 -10  两个值；  10 表示有风险  -10 表示无风险\\\\n   result.put(\\\"riskValue\\\", new java.lang.Integer(-10));\\\\n\\\\n   if(hitRuleCodeList.size() > 0) {\\\\n      result.put(\\\"riskValue\\\", new java.lang.Integer(10));\\\\n      var finalHitCode = hitRuleCodeList.get(0);\\\\n      var hitRuleConfig = syncConfigManager.getRuleConfig(finalHitCode);\\\\n      if (hitRuleConfig != null) {\\\\n          var riskLevel = hitRuleConfig.getRiskLevel();\\\\n          if(riskLevel == 1) {\\\\n             result.put(\\\"riskLevel\\\", \\\"100\\\");\\\\n          } else if(riskLevel == 2) {\\\\n             result.put(\\\"riskLevel\\\", \\\"200\\\");\\\\n          } else if(riskLevel == 3) {\\\\n             result.put(\\\"riskLevel\\\", \\\"300\\\");\\\\n          }\\\\n      }\\\\n      JsLog.writeErr(result, \\\"用户发起活动命中返回结果：\\\");\\\\n   }\\\\n\\\\n  JsLog.writeWarn(result, \\\"用户发起活动风险校验返完成，返回结果：\\\");\\\\n}\\\\n\\\\nmain();',\\n            jsonStr: 'var SpringUtil = com.jd.o2o.rcc.service.util.spring.SpringUtil;\\\\nvar ArrayList = java.util.ArrayList;\\\\nvar Integer = java.lang.Integer;\\\\nvar syncConfigManager = SpringUtil.getBean(\\\"scriptSyncConfig\\\");\\\\n\\\\nfunction main() {\\\\n\\\\n  \\\\n   var hitRuleCodeList = result.get(\\\"hitRuleCodeList\\\");\\\\n   // 默认无风险  riskValue 只有10  和 -10  两个值；  10 表示有风险  -10 表示无风险\\\\n   result.put(\\\"riskValue\\\", new java.lang.Integer(-10));\\\\n\\\\n   if(hitRuleCodeList.size() > 0) {\\\\n      result.put(\\\"riskValue\\\", new java.lang.Integer(10));\\\\n\\\\n      var hitRuleConfig = syncConfigManager.getRuleConfig(finalHitCode);\\\\n      if (hitRuleConfig != null) {\\\\n          var riskLevel = hitRuleConfig.getRiskLevel();\\\\n          result.put(\\\"riskLevel\\\", riskLevel * 100);\\\\n      }\\\\n      JsLog.writeErr(result, \\\"用户发起活动命中返回结果：\\\");\\\\n   }\\\\n\\\\n  JsLog.writeWarn(result, \\\"用户发起活动风险校验返完成，返回结果：\\\");\\\\n}\\\\n\\\\nmain();'\\n          };\\n        },\\n        methods: {\\n          readOnlyFun() {\\n            this.readOnly = !this.readOnly;\\n            // this.leftConfig.readOnly=this.readOnly;\\n            this.leftConfig.readOnly = this.readOnly;\\n            console.log(this.leftConfig.readOnly, 'this.leftConfig.readOnly');\\n          },\\n          getJson() {\\n            console.log(this.jsonStrLeft);\\n            console.log(this.jsonStr);\\n          },\\n          updateFun() {\\n            this.jsonStr = 'a';\\n            this.jsonStrLeft = 'b';\\n          },\\n          updateFun2() {\\n            this.jsonStr = 'aaaa';\\n            this.jsonStrLeft = 'bbbb';\\n          },\\n          codeChange(valLeft, val, valRight) {\\n            // console.log(valLeft);\\n            // console.log(val);\\n            // console.log(valRight);\\n            this.jsonStr = val;\\n            this.jsonStrLeft = valLeft;\\n          }\\n        }\\n      }\\n    },\\n    {\\n      title: 'JSON格式化',\\n      template: `\\n        <dj-json ref=\\\"json\\\" v-model=\\\"jsonStr\\\" height=\\\"300px\\\"/>\\n        <dj-textarea v-model=\\\"jsonStr\\\" style=\\\"width: 100%; height: 100px;\\\"/>`,\\n      data: {\\n        data() {\\n          return {\\n            jsonStr: '{\\\"code\\\":\\\"0\\\",\\\"msg\\\":\\\"成功\\\",\\\"detail\\\":null,\\\"result\\\":{\\\"pageNo\\\":1,\\\"pageSize\\\":10,\\\"maxPageSize\\\":100,\\\"totalCount\\\":1,\\\"resultList\\\":[{\\\"primaryKey\\\":\\\"6088bdf8e4b0b008d13dca22\\\",\\\"spuId\\\":10453667,\\\"name\\\":\\\"保灵康宝 脚气膏 20g/盒\\\",\\\"operationType\\\":2,\\\"operationTypeInfo\\\":\\\"新建\\\",\\\"operationDesc\\\":5,\\\"operationDescInfo\\\":\\\"预备库新增标准商品\\\",\\\"before\\\":null,\\\"after\\\":null,\\\"opKeys\\\":null,\\\"createTime\\\":1619574264874,\\\"createPin\\\":\\\"xuedui@imdada.cn\\\"}],\\\"page\\\":1,\\\"totalPage\\\":1},\\\"success\\\":true}'\\n          };\\n        },\\n        methods: {}\\n      }\\n    }\\n  ]\\n};\\n\";"],"mappings":"AAAA,eAAe,4nbAAf"}]}
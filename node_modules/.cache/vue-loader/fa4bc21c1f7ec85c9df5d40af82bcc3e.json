{"remainingRequest":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangjunxia/work-github/dj-design/packages/cascader/src/cascader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangjunxia/work-github/dj-design/packages/cascader/src/cascader.vue","mtime":1676539455975},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["cascader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"cascader.vue","sourceRoot":"packages/cascader/src","sourcesContent":["<template>\n  <div class=\"dj-cascader\" :style=\"{ width }\">\n    <dj-popover\n      :visible.sync=\"visible\"\n      placement=\"bottomLeft\"\n      trigger=\"click\"\n      :disabled=\"disabled\"\n      appendToBody\n      className=\"dj-cascader-popover\"\n      ref=\"popoverItem\"\n      style=\"width: 100%\"\n    >\n      <template #content>\n        <div v-if=\"isSearch\" class=\"dj-cascader-inner\">\n          <div class=\"dj-cascader-col\" v-if=\"searchRenderList.length\">\n            <div class=\"dj-cascader-col-wrap\">\n              <div v-for=\"(o, i) in searchRenderList\" :key=\"i\" class=\"dj-cascader-item\">\n                <div\n                  @click.stop=\"handleCheckSearch(o, radio)\"\n                  class=\"dj-cascader-item-item\"\n                  :class=\"{\n                    active: text == o[labelKey],\n                    search: isSearch\n                  }\"\n                >\n                  <div class=\"dj-cascader-item-item-content\">\n                    <slot v-bind=\"{ data: o }\">\n                      <span :title=\"o[labelKey]\">{{ o[labelKey] }}</span>\n                    </slot>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div v-else :style=\"{ width }\" class=\"dj-cascader-empty-panel\">无匹配数据</div>\n        </div>\n        <div v-else class=\"dj-cascader-inner\">\n          <div v-for=\"(rList, index) in renderList\" :key=\"index\" class=\"dj-cascader-col\">\n            <div class=\"dj-cascader-col-wrap\">\n              <div v-for=\"(o, i) in rList\" :key=\"i\" class=\"dj-cascader-item\">\n                <div\n                  @click.stop=\"handleCheck(o, index, !!(o[childrenKey] && o[childrenKey].length), false, radio)\"\n                  class=\"dj-cascader-item-item\"\n                  :class=\"{\n                    active: (checkList[o.level - 1] || {})[valueKey] == o[valueKey]\n                  }\"\n                >\n                  <div class=\"dj-cascader-item-item-content\">\n                    <dj-radio\n                      v-if=\"radio\"\n                      v-model=\"radioValue\"\n                      :class=\"{\n                        active:\n                          (checkList[o.level - 1] || {})[valueKey] == o[valueKey] &&\n                          (config.lazy ? o.leaf === false : o[childrenKey] && o[childrenKey].length),\n                        checked: value.includes(o[valueKey])\n                      }\"\n                      :code=\"o[valueKey]\"\n                      @change=\"handleCheck(o, index, !!(o[childrenKey] && o[childrenKey].length))\"\n                      :title=\"o[labelKey]\"\n                    >\n                      <slot v-bind=\"{ data: o }\">\n                        {{ o[labelKey] }}\n                      </slot>\n                    </dj-radio>\n                    <div v-else>\n                      <slot v-bind=\"{ data: o }\">\n                        <span :title=\"o[labelKey]\">{{ o[labelKey] }}</span>\n                      </slot>\n                    </div>\n                  </div>\n                  <dj-icon\n                    v-if=\"(o[childrenKey] && o[childrenKey].length) || (o.leaf === false && !o.loading)\"\n                    :class=\"{\n                      active: radio\n                        ? value.includes(o[valueKey])\n                        : checkList.find((item) => item[valueKey] === o[valueKey])\n                    }\"\n                    icon=\"arrow-right\"\n                    fontSize=\"20px\"\n                  ></dj-icon>\n                  <dj-icon v-if=\"o.loading && o.leaf === false\" icon=\"load\" fontSize=\"20px\"></dj-icon>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            v-if=\"!renderList.length || !(renderList[0] || []).length\"\n            :style=\"{ width }\"\n            class=\"dj-cascader-empty-panel\"\n          >\n            无匹配数据\n          </div>\n        </div>\n      </template>\n      <Main\n        ref=\"main\"\n        :clearable=\"clearable\"\n        :placeholder=\"placeholder\"\n        v-model=\"text\"\n        :visible.sync=\"visible\"\n        :loading=\"loading\"\n        :searchable=\"searchable\"\n        @onSearch=\"handleSearch\"\n        :delayTime=\"config.delayTime\"\n        :disabled=\"disabled\"\n      ></Main>\n    </dj-popover>\n  </div>\n</template>\n\n<script>\nimport Main from './main.vue';\nimport deepClone from '@/utils/deepClone';\nexport default {\n  name: 'dj-cascader',\n  components: { Main },\n  props: {\n    value: {\n      default: () => []\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    config: {\n      type: Object,\n      default: () => ({\n        labelKey: 'label',\n        valueKey: 'value',\n        childrenKey: 'children'\n      })\n    },\n    // 可搜索\n    searchable: {\n      type: Boolean,\n      default: false\n    },\n    // 搜索框宽度\n    width: {\n      type: String,\n      default: '400px'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    radio: {\n      type: Boolean,\n      default: false\n    },\n    separator: {\n      type: String,\n      default: '/'\n    }\n  },\n  data() {\n    return {\n      text: '',\n      visible: false,\n      checkList: [],\n      renderList: [],\n      checkListCopy: [],\n      mOptions: [],\n      flattenList: [],\n      isSearch: false,\n      loading: false,\n      isClear: false,\n      radioValue: '',\n      oldValue: [],\n      activeFlag: 1,\n      isInnerChange: false\n    };\n  },\n  computed: {\n    valueKey() {\n      return this.config.valueKey || 'value';\n    },\n    labelKey() {\n      return this.config.labelKey || 'label';\n    },\n    childrenKey() {\n      return this.config.childrenKey || 'children';\n    }\n  },\n  watch: {\n    options: {\n      handler() {\n        this.initDatas();\n        this.vModelValue();\n      },\n      deep: true\n    },\n    visible: {\n      handler(v) {\n        if (!v) {\n          this.$refs.main.isActive = false;\n        }\n      }\n    },\n    text: {\n      handler(v) {\n        if (v === '') {\n          this.checkList = [];\n          this.renderList.splice(1);\n        }\n        this.isSearch = false;\n        const modelValue = this.checkList.map((item) => item[this.valueKey]);\n        this.radioValue = modelValue[modelValue.length - 1];\n\n        if (JSON.stringify(modelValue) !== JSON.stringify(this.value)) {\n          this.$emit('input', modelValue);\n          this.isInnerChange = true;\n        }\n        this.$emit('change', modelValue);\n      },\n      deep: true\n    },\n    renderList: {\n      handler(v) {\n        if (this.searchable && this.config.lazy) {\n          this.searchList = this.combinationSearch(deepClone(v));\n        }\n        this.$refs.popoverItem?.computePosition();\n      },\n      deep: true\n    },\n    value: {\n      handler(v, oV) {\n        this.oldValue = oV;\n        if (!v || !v?.length) {\n          this.text = '';\n          return;\n        }\n        this.text = this.text.split(this.separator).splice(0, v.length).join(this.separator);\n        if (!this.isInnerChange) {\n          this.vModel();\n        }\n        this.isInnerChange = true;\n      },\n      deep: true\n    },\n    checkList: {\n      handler(v) {\n        this.text = v.reduce((prev, item, index) => {\n          // eslint-disable-next-line no-return-assign\n          return prev += (index === 0 ? '' : this.separator) + item[this.labelKey];\n        }, '');\n      }\n    }\n  },\n  created() {},\n  mounted() {\n    if (this.config.lazy) {\n      this.config.lazyLoad({ level: 0 }, (nodes) => {\n        this.renderList = [this.addLevel(nodes, this.childrenKey)];\n      });\n    } else {\n      this.initDatas();\n    }\n    this.vModel();\n  },\n  methods: {\n    initDatas() {\n      this.mOptions = this.addLevel(deepClone(this.options), this.config.childrenKey || 'children');\n      this.flattenList = this.flatten(deepClone(this.mOptions), {\n        options: this.options,\n        valueKey: this.valueKey,\n        labelKey: this.labelKey,\n        childrenKey: this.childrenKey\n      });\n      this.renderList[0] = this.mOptions;\n      this.searchList = this.combination(deepClone(this.mOptions));\n    },\n    addLevel(arr, childrenKey, index = 0) {\n      arr.forEach((item) => {\n        item.origin = deepClone(item);\n        item.level = index + 1;\n        if (item[childrenKey]) {\n          this.addLevel(item[childrenKey], childrenKey, index + 1);\n        }\n      });\n      return arr;\n    },\n    flatten(arr, datas) {\n      const result = [];\n      arr.forEach((item) => {\n        result.push(item);\n        if (item[datas.childrenKey]) {\n          item[datas.childrenKey].forEach((child) => {\n            child.pId = item[datas.valueKey];\n          });\n          const children = deepClone(item[datas.childrenKey]);\n          result.push(...this.flatten(children, datas));\n        }\n      });\n      return result;\n    },\n    combination(arr) {\n      const result = [];\n\n      /**\n       * @desc 格式化函数\n       * @param {Array} arr 数组\n       * @param {Array} parent 父级数组\n       * @return {Array} 格式化后的数组\n       */\n      const labelKey = this.labelKey;\n      const valueKey = this.valueKey;\n      const childrenKey = this.childrenKey;\n      const separator = this.separator;\n      function format(arr, parent) {\n        arr.forEach((item) => {\n          const { level } = item;\n          if (level == 1) {\n            parent = {\n              [labelKey]: item[labelKey],\n              [valueKey]: [item[valueKey]]\n            };\n          } else {\n            const parentBackup = deepClone(parent);\n            parent = {\n              [labelKey]:\n                parentBackup[labelKey]\n                  .split(separator)\n                  .splice(0, level - 1)\n                  .join(separator) +\n                separator +\n                item[labelKey],\n              [valueKey]: [...parentBackup[valueKey].splice(0, level - 1), item[valueKey]]\n            };\n          }\n          if (item[childrenKey] && item[childrenKey].length) {\n            format(item[childrenKey], parent);\n          } else {\n            result.push(parent);\n          }\n        });\n      }\n\n      format(arr);\n\n      return result;\n    },\n    combinationSearch(arr) {\n      const result = [];\n\n      const labelKey = this.labelKey;\n      const valueKey = this.valueKey;\n      const separator = this.separator;\n      function format(arr) {\n        arr.forEach((itemArr, index) => {\n          itemArr.forEach((item) => {\n            if (index === 0) {\n              result.push({\n                ...item,\n                [valueKey]: [item[valueKey]]\n              });\n            } else {\n              const parent = result.find((p) => p[valueKey].includes(item.pId));\n              if (!parent) return;\n              result.push({\n                ...item,\n                [valueKey]: [...parent[valueKey], item[valueKey]],\n                [labelKey]: parent[labelKey] + separator + item[labelKey]\n              });\n            }\n          });\n        });\n      }\n\n      format(arr);\n\n      return result;\n    },\n    handleCheck(item, index, hasChildren, isLazySearch, isRadio) {\n      if (\n        JSON.stringify(item) === JSON.stringify(this.checkList[item.level - 1]) &&\n        item.level == this.checkList.length\n      ) {\n        if (!this.radio || isRadio) {\n          return;\n        }\n      }\n      const checkList = deepClone(this.checkList);\n      this.checkList[item.level - 1] = item;\n      this.checkList = this.checkList.filter((_, i) => i <= index);\n\n      let checkStrictly = this.config.checkStrictly;\n      if (this.config.lazy && this.searchable) {\n        checkStrictly = true;\n      }\n\n      // 如果开启了选中任意项，则执行该逻辑\n      if (\n        checkStrictly && !isRadio ||\n        item.leaf ||\n        !hasChildren && item.leaf !== false ||\n        this.radio && !isRadio\n      ) {\n        if (this.radio && isRadio && (item.leaf || !hasChildren && item.leaf !== false)) {\n          //\n        } else {\n          this.text = this.checkList.reduce((prev, item, index) => {\n            // eslint-disable-next-line no-return-assign\n            return prev += (index === 0 ? '' : this.separator) + item[this.labelKey];\n          }, '');\n        }\n      }\n\n      // 如果重复选择了前面选中过的项，则渲染列表仅展示下一级子集\n      if (checkList.find((i) => i[this.valueKey] === item[this.valueKey] && i.level === item.level)) {\n        this.renderList.splice(index + 2);\n        if (!this.config.lazy || !this.searchable) {\n          // return;\n        }\n      }\n      // 如果下一级渲染的列表是当前选中的项的子项，则不需要重新渲染\n      if (item[this.valueKey] === (this.renderList[index + 1] || [])[0]?.pId) {\n        return;\n      }\n      if (this.config.lazy) {\n        if (!item.leaf) {\n          item.loading = true;\n          this.loading = true;\n          // 清空子集渲染列表\n          this.renderList.splice(index + 1);\n          this.config.lazyLoad(item, (nodes) => {\n            this.renderList[index + 1] = this.addLevel(nodes, this.childrenKey, item.level).map((i) => {\n              i.pId = item[this.valueKey];\n              return i;\n            });\n            this.renderList = this.renderList.filter((item, i) => i <= index + 1);\n            if (!this.renderList[this.renderList.length - 1].length) {\n              this.renderList.pop();\n            }\n            item.loading = false;\n            this.loading = false;\n          });\n        } else {\n          // 选中最后一级关闭气泡\n          !isLazySearch && (this.visible = false);\n        }\n      } else {\n        this.renderList[index + 1] = this.flattenList.filter(\n          (i) => i.level === index + 2 && item[this.valueKey] === i.pId\n        );\n        this.renderList = this.renderList.filter((item, i) => i <= index + 1);\n        if (!this.renderList[this.renderList.length - 1].length) {\n          this.renderList.pop();\n        }\n\n        if (!hasChildren && !this.radio) {\n          // 选中最后一级关闭气泡\n          this.visible = false;\n        }\n      }\n      this.$emit('change', item);\n    },\n    handleSearch(keyword) {\n      this.isSearch = false;\n      if (keyword === this.text) {\n        return;\n      }\n      if (!keyword) {\n        this.searchRenderList = [];\n        return;\n      }\n      this.isSearch = true;\n      // 根据label进行模糊匹配，返回list\n      this.searchRenderList = this.searchList.filter((i) => i[this.labelKey]?.includes(keyword));\n    },\n    handleCheckSearch(item, isRadio) {\n      if (item[this.labelKey] === this.text) {\n        this.visible = false;\n        return;\n      }\n      // 给搜索框展示的文本赋值\n      this.text = item[this.labelKey];\n\n      const { labelKey, valueKey } = this;\n      const _this = this;\n      function searchFormatCheckList(flattenList) {\n        // 格式化checkList\n        _this.checkList = item[valueKey].map((i) => {\n          const detail = flattenList.find((j) => j[valueKey] === i);\n          return {\n            [valueKey]: i,\n            [labelKey]: detail?.[labelKey],\n            level: detail.level\n          };\n        });\n\n        // 加载渲染列表\n        _this.checkList.reduce((prev, item, index) => {\n          if (index === 0) {\n            _this.renderList[0] = _this.mOptions;\n          } else {\n            _this.renderList[index] = flattenList.filter((i) => i.level === index + 1 && prev[valueKey] === i.pId);\n          }\n          return item;\n        });\n      }\n\n      if (this.config.lazy && this.searchable) {\n        const flatList = this.renderList.flat(2);\n        searchFormatCheckList(flatList);\n        setTimeout(() => {\n          const valueLength = item[this.valueKey].length;\n          const labelList = item[this.labelKey].split(this.separator);\n          const data = {\n            ...item,\n            [this.valueKey]: item[this.valueKey][valueLength - 1],\n            [this.labelKey]: labelList[labelList.length - 1]\n          };\n          this.handleCheck(data, item.level - 1, false, true, isRadio);\n        });\n      } else {\n        searchFormatCheckList(this.flattenList);\n      }\n    },\n    // 回显双向绑定\n    vModelValue() {\n      const checkList = [];\n      const renderList = [];\n      this.value.forEach((item, index) => {\n        if (index === 0) {\n          renderList[index] = this.flattenList.filter((f) => f.level === 1);\n        } else {\n          renderList[index] = this.flattenList.filter((f) => f.pId === this.value[index - 1]);\n        }\n        const checkItem = this.flattenList.find((f) => f[this.valueKey] === item);\n        checkItem && (checkList[index] = checkItem);\n      });\n      if (JSON.stringify(checkList) === JSON.stringify(this.checkList)) return;\n      this.renderList = renderList;\n      this.checkList = checkList;\n      this.text = this.checkList\n        .filter((item) => item)\n        .reduce((prev, item, index) => `${prev}${index ? this.separator : ''}${item[this.labelKey]}`, '');\n      this.radioValue = this.value[this.value.length - 1];\n    },\n    // 动态回显双向绑定\n    activeVmodelValue() {\n      this.activeFlag = 1;\n      (this.value || []).forEach((item, index) => {\n        if (item !== this.oldValue[index]) {\n          this.config.lazyLoad({ level: index + 1 }, (nodes) => {\n            this.activeFlag = this.activeFlag + 1;\n            const checkList = [];\n            if (this.activeFlag > this.value.length) {\n              return;\n            }\n            this.renderList[index + 1] = this.addLevel(nodes, this.childrenKey, index + 1).map((i) => {\n              i.pId = item[this.valueKey];\n              return i;\n            });\n            if (this.activeFlag === this.value.length) {\n              this.value.forEach((item, index) => {\n                checkList[index] = this.renderList[index].find((i) => i[this.valueKey] === item);\n              });\n              if (JSON.stringify(checkList) === JSON.stringify(this.checkList)) return;\n              this.checkList = checkList;\n              this.text = this.checkList\n                .filter((item) => item)\n                .reduce((prev, item, index) => `${prev}${index ? this.separator : ''}${item[this.labelKey]}`, '');\n              this.radioValue = this.value[this.value.length - 1];\n              if (this.renderList[index].find((node) => node[this.valueKey] === item)?.leaf) {\n                return;\n              }\n            }\n            // if (!this.renderList[index + 1]) {\n            //   this.renderList[index + 1] = this.addLevel(nodes, this.childrenKey, index + 1).map((i) => {\n            //     i.pId = item[this.valueKey];\n            //     return i;\n            //   });\n            // }\n            // this.renderList = this.renderList.filter(\n            //   (item, i) => i <= index + 1\n            // );\n            if (!this.renderList[this.renderList.length - 1].length) {\n              this.renderList.pop();\n            }\n          });\n        }\n      });\n    },\n    vModel() {\n      if (!this.config.lazy && this.value?.length) {\n        this.vModelValue();\n      } else if (this.config.lazy) {\n        this.activeVmodelValue();\n      }\n    }\n  }\n};\n</script>\n"]}]}
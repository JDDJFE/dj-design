{"remainingRequest":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangjunxia/work-github/dj-design/packages/datePicker/src/picker.vue?vue&type=template&id=f53f64d0&","dependencies":[{"path":"/Users/wangjunxia/work-github/dj-design/packages/datePicker/src/picker.vue","mtime":1676537858395},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1655712169000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
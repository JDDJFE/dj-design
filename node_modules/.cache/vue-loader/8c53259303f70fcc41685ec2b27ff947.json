{"remainingRequest":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangjunxia/work-github/dj-design/packages/checkbox/src/checkbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangjunxia/work-github/dj-design/packages/checkbox/src/checkbox.vue","mtime":1673509764304},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBFbWl0dGVyIGZyb20gJ0AvbWl4aW5zL2VtaXR0ZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2RqQ2hlY2tib3gnLAogIGNvbXBvbmVudE5hbWU6ICdkakNoZWNrYm94JywKICBwcm9wczogewogICAgYnV0dG9uOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgYnV0dG9uU3R5bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnc29saWQnCiAgICB9LAogICAgdmFsdWU6IHt9LAogICAgY29kZToge30sCiAgICBpbmRldGVybWluYXRlOiBCb29sZWFuLAogICAgZGlzYWJsZWQ6IEJvb2xlYW4sCiAgICBjaGVja2VkOiBbQm9vbGVhbl0sCiAgICBuYW1lOiBTdHJpbmcsCiAgICBib3JkZXI6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBzaXplOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfQogIH0sCiAgbWl4aW5zOiBbRW1pdHRlcl0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlbGZNb2RlbDogZmFsc2UsCiAgICAgIGNvZGVzOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICByYWRpb1NpemUoKXsKICAgICAgcmV0dXJuIHRoaXMuJHBhcmVudC5zaXplIHx8IHRoaXMuc2l6ZTsKICAgIH0sCiAgICBtb2RlbDogewogICAgICBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaXNHcm91cCA/CiAgICAgICAgICB0aGlzLmlzR3JvdXAudmFsdWUgOiB0aGlzLnZhbHVlICE9PSB2b2lkIDAgPwogICAgICAgICAgICB0aGlzLnZhbHVlIDogdGhpcy5zZWxmTW9kZWw7CiAgICAgIH0sCiAgICAgIHNldCh2YWwpIHsKICAgICAgICBpZiAodGhpcy5pc0dyb3VwKSB7CiAgICAgICAgICB0aGlzLmRpc3BhdGNoKCdkakNoZWNrYm94R3JvdXAnLCAnaW5wdXQnLCBbdmFsXSk7CiAgICAgICAgICB0aGlzLmNvZGVzID0gdGhpcy5pc0dyb3VwLiRjaGlsZHJlbi5yZWR1Y2UoKHIsIGUsIGkpID0+IHsKICAgICAgICAgICAgaWYgKHZhbC5pbmNsdWRlcyhlLmNvZGUpICYmIGUuJHNsb3RzLmRlZmF1bHQpewogICAgICAgICAgICAgIHIucHVzaChlLiRzbG90cy5kZWZhdWx0WzBdLnRleHQpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiByOwogICAgICAgICAgfSwgW10pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbCk7CiAgICAgICAgICB0aGlzLnNlbGZNb2RlbCA9IHZhbDsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBpc0NoZWNrZWQoKSB7CiAgICAgIGlmICh7fS50b1N0cmluZy5jYWxsKHRoaXMubW9kZWwpID09PSAnW29iamVjdCBCb29sZWFuXScpIHsKICAgICAgICByZXR1cm4gdGhpcy5tb2RlbDsKICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHRoaXMubW9kZWwpKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubW9kZWwuaW5kZXhPZih0aGlzLmNvZGUpID4gLTE7CiAgICAgIH0KICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKICAgIGlzQm9yZGVyKCkgewogICAgICBpZiAodGhpcy5pc0dyb3VwKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHBhcmVudC5ib3JkZXIgfHwgdGhpcy5ib3JkZXI7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMuYm9yZGVyOwogICAgfSwKICAgIGlzQnV0dG9uKCkgewogICAgICByZXR1cm4gdGhpcy4kcGFyZW50LmJ1dHRvbiB8fCB0aGlzLmJ1dHRvbjsKICAgIH0sCiAgICBidXR0b25TdHlsZVN0cigpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNHcm91cCA/IHRoaXMuJHBhcmVudC5idXR0b25TdHlsZSB8fCB0aGlzLmJ1dHRvblN0eWxlIDogdGhpcy5idXR0b25TdHlsZTsKICAgIH0sCiAgICBpc0dyb3VwKCkgewogICAgICBsZXQgcGFyZW50ID0gdGhpcy4kcGFyZW50OwogICAgICB3aGlsZSAocGFyZW50KSB7CiAgICAgICAgaWYgKHBhcmVudC4kb3B0aW9ucy5jb21wb25lbnROYW1lICE9PSAnZGpDaGVja2JveEdyb3VwJykgewogICAgICAgICAgcGFyZW50ID0gcGFyZW50LiRwYXJlbnQ7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiBwYXJlbnQ7CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICBpc0xpbWl0RGlzYWJsZWQoKSB7CiAgICAgIGNvbnN0IHsgbWF4bGltaXQsIG1heExpbWl0IH0gPSB0aGlzLiRwYXJlbnQ7CiAgICAgIGNvbnN0IGxpbWl0ID0gbWF4TGltaXQgfHwgbWF4bGltaXQ7CiAgICAgIHJldHVybiAhIWxpbWl0ICYmKHRoaXMubW9kZWwubGVuZ3RoID49IGxpbWl0ICYmICF0aGlzLmlzQ2hlY2tlZCk7CiAgICB9LAogICAgaXNNaW5MaW1pdCgpIHsKICAgICAgY29uc3QgeyBtaW5saW1pdCwgbWluTGltaXQgfSA9IHRoaXMuJHBhcmVudDsKICAgICAgY29uc3QgbGltaXQgPSBtaW5MaW1pdCB8fCBtaW5saW1pdDsKICAgICAgcmV0dXJuICEhbGltaXQgJiYgKHRoaXMubW9kZWwubGVuZ3RoIDw9IGxpbWl0ICYmIHRoaXMuaXNDaGVja2VkKTsKICAgIH0sCiAgICBpc0Rpc2FibGVkKCkgewogICAgICByZXR1cm4gdGhpcy5kaXNhYmxlZCB8fCB0aGlzLmlzTGltaXREaXNhYmxlZCB8fCB0aGlzLiRwYXJlbnQuZGlzYWJsZWQ7CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlQ2hhbmdlKGV2KSB7CiAgICAgIGxldCB2YWx1ZSA9IGV2LnRhcmdldC5jaGVja2VkOwogICAgICBsZXQgbHMgPSB0aGlzLiRzbG90cy5kZWZhdWx0ICYmIHRoaXMuJHNsb3RzLmRlZmF1bHRbMF0udGV4dDsKICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdmFsdWUsIGxzKTsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIGlmICh0aGlzLmlzR3JvdXApIHsKICAgICAgICAgIHRoaXMuZGlzcGF0Y2goJ2RqQ2hlY2tib3hHcm91cCcsICdjaGFuZ2UnLCBbdGhpcy5pc0dyb3VwLnZhbHVlLCB0aGlzLmNvZGVzXSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjaGVja2VkOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uKG4sIG8pIHsKICAgICAgICBpZiAobiB8fCBvICE9PSB2b2lkIDAgJiYgbiAhPT0gbykgewogICAgICAgICAgdGhpcy5tb2RlbCA9IG47CiAgICAgICAgfQogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["checkbox.vue"],"names":[],"mappingsfile":"checkbox.vue","sourceRoot":"packages/checkbox/src","sourcesContent":["<template>\n  <label\n    class=\"dj-checkbox\"\n    :class=\"[\n      radioSize && `is-size-${radioSize}`,\n      { 'is-indeterminate': indeterminate },\n      { 'is-disabled': isDisabled },\n      { 'is-bordered': isBorder },\n      { 'is-checked': isChecked },\n      { 'is-button': isButton },\n      isButton && `is-button-${buttonStyleStr}`\n    ]\">\n    <span class=\"dj-checkbox-icon\" v-if=\"!isButton\"></span>\n    <input\n      class=\"dj-checkbox-original\"\n      type=\"checkbox\"\n      :disabled=\"isDisabled\"\n      :value=\"code\"\n      :name='name'\n      v-model=\"model\"\n      @change=\"handleChange\">\n      {{$parent.length}}\n    <span class=\"dj-checkbox-label\" v-if=\"$slots.default\">\n      <slot></slot>\n    </span>\n  </label>\n</template>\n<script>\nimport Emitter from '@/mixins/emitter';\nexport default {\n  name: 'djCheckbox',\n  componentName: 'djCheckbox',\n  props: {\n    button: {\n      type: Boolean,\n      default: false\n    },\n    buttonStyle: {\n      type: String,\n      default: 'solid'\n    },\n    value: {},\n    code: {},\n    indeterminate: Boolean,\n    disabled: Boolean,\n    checked: [Boolean],\n    name: String,\n    border: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: String\n    }\n  },\n  mixins: [Emitter],\n  data() {\n    return {\n      selfModel: false,\n      codes: []\n    };\n  },\n  computed: {\n    radioSize(){\n      return this.$parent.size || this.size;\n    },\n    model: {\n      get() {\n        return this.isGroup ?\n          this.isGroup.value : this.value !== void 0 ?\n            this.value : this.selfModel;\n      },\n      set(val) {\n        if (this.isGroup) {\n          this.dispatch('djCheckboxGroup', 'input', [val]);\n          this.codes = this.isGroup.$children.reduce((r, e, i) => {\n            if (val.includes(e.code) && e.$slots.default){\n              r.push(e.$slots.default[0].text);\n            }\n            return r;\n          }, []);\n        } else {\n          this.$emit('input', val);\n          this.selfModel = val;\n        }\n      }\n    },\n    isChecked() {\n      if ({}.toString.call(this.model) === '[object Boolean]') {\n        return this.model;\n      } else if (Array.isArray(this.model)) {\n        return this.model.indexOf(this.code) > -1;\n      }\n      return false;\n    },\n    isBorder() {\n      if (this.isGroup) {\n        return this.$parent.border || this.border;\n      }\n      return this.border;\n    },\n    isButton() {\n      return this.$parent.button || this.button;\n    },\n    buttonStyleStr() {\n      return this.isGroup ? this.$parent.buttonStyle || this.buttonStyle : this.buttonStyle;\n    },\n    isGroup() {\n      let parent = this.$parent;\n      while (parent) {\n        if (parent.$options.componentName !== 'djCheckboxGroup') {\n          parent = parent.$parent;\n        } else {\n          return parent;\n        }\n      }\n      return false;\n    },\n    isLimitDisabled() {\n      const { maxlimit, maxLimit } = this.$parent;\n      const limit = maxLimit || maxlimit;\n      return !!limit &&(this.model.length >= limit && !this.isChecked);\n    },\n    isMinLimit() {\n      const { minlimit, minLimit } = this.$parent;\n      const limit = minLimit || minlimit;\n      return !!limit && (this.model.length <= limit && this.isChecked);\n    },\n    isDisabled() {\n      return this.disabled || this.isLimitDisabled || this.$parent.disabled;\n    }\n  },\n  created() {\n  },\n  methods: {\n    handleChange(ev) {\n      let value = ev.target.checked;\n      let ls = this.$slots.default && this.$slots.default[0].text;\n      this.$emit('change', value, ls);\n      this.$nextTick(() => {\n        if (this.isGroup) {\n          this.dispatch('djCheckboxGroup', 'change', [this.isGroup.value, this.codes]);\n        }\n      });\n    }\n  },\n  watch: {\n    checked: {\n      handler: function(n, o) {\n        if (n || o !== void 0 && n !== o) {\n          this.model = n;\n        }\n      },\n      immediate: true\n    }\n  }\n};\n</script>\n"]}]}
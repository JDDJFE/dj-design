{"remainingRequest":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangjunxia/work-github/dj-design/packages/json/src/json.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangjunxia/work-github/dj-design/packages/json/src/json.vue","mtime":1675737648897},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["json.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"json.vue","sourceRoot":"packages/json/src","sourcesContent":["<template>\n  <div class=\"dj-json-in-coder-panel\" :id=\"tooltipId\">\n    <div v-if=\"diff\" id=\"dj-json-view\"></div>\n    <textarea v-else ref=\"textarea\"></textarea>\n\n    <!--<div v-if=\"disabled\" class=\"maskBox\"></div>-->\n    <!--    <dj-button class=\"ml10\" size=\"small\" @click=\"getJson\">获取数据</dj-button>-->\n  </div>\n\n</template>\n\n<script type=\"text/ecmascript-6\">\n// 引入全局实例\nimport _CodeMirror from 'codemirror';\n// import './diff_match_patch'\n// import {codemirror} from 'vue-codemirror'\nimport 'codemirror/addon/search/search';\n// import 'codemirror/addon/search/annotatescrollbar'\nimport 'codemirror/addon/search/matchesonscrollbar';\nimport 'codemirror/addon/search/searchcursor';\nimport 'codemirror/addon/search/match-highlighter';\nimport 'codemirror/addon/dialog/dialog.css';\nimport 'codemirror/addon/merge/merge.js';\nimport 'codemirror/addon/merge/merge.css';\n// // 折叠\nimport 'codemirror/addon/fold/foldgutter.css';\nimport 'codemirror/addon/fold/foldcode.js';\nimport 'codemirror/addon/fold/foldgutter.js';\nimport 'codemirror/addon/fold/xml-fold.js';\nimport 'codemirror/addon/fold/indent-fold.js';\nimport 'codemirror/addon/fold/brace-fold';\nimport 'codemirror/addon/fold/markdown-fold.js';\nimport 'codemirror/addon/fold/comment-fold.js';\n// // import 'codemirror/addon/selection/active-line';\n// import 'codemirror/addon/edit/closebrackets';\n// import 'codemirror/addon/edit/matchbrackets';\n\n// 核心样式\nimport 'codemirror/lib/codemirror.css';\n// 需要引入具体的语法高亮库才会有对应的语法高亮效果\n// codemirror 官方其实支持通过 /addon/mode/loadmode.js 和 /mode/meta.js 来实现动态加载对应语法高亮库\n// 但 vue 貌似没有无法在实例初始化后再动态加载对应 JS ，所以此处才把对应的 JS 提前引入\nimport 'codemirror/mode/meta.js';\n// import 'codemirror/mode/javascript/javascript'\n// import 'codemirror/mode/clike/clike'\n// import 'codemirror/mode/go/go'\n// import 'codemirror/mode/htmlmixed/htmlmixed'\n// import 'codemirror/mode/http/http'\n// import 'codemirror/mode/php/php'\n// import 'codemirror/mode/python/python'\n// import 'codemirror/mode/http/http'\n// import 'codemirror/mode/sql/sql'\n// import 'codemirror/mode/vue/vue'\n// import 'codemirror/mode/xml/xml'\n// import 'codemirror/mode/css/css.js';\n// import 'codemirror/mode/markdown/markdown.js';\n// import 'codemirror/mode/r/r.js';\n// import 'codemirror/mode/shell/shell.js';\n// import 'codemirror/mode/swift/swift.js';\n// 引入主题后还需要在 options 中指定主题才会生效\n// import 'codemirror/theme/cobalt.css';\n// import \"codemirror/theme/ambiance.css\";  // 这里引入的是主题样式，根据设置的theme的主题引入，一定要引入！！\n// import 'codemirror/theme/eclipse.css';\n// import 'codemirror/theme/monokai.css'\n// import 'codemirror/theme/blackboard.css';\n\nimport 'codemirror/addon/display/fullscreen.css'; // 全屏显示编辑器\nimport 'codemirror/addon/display/fullscreen.js'; // 全屏显示编辑器\n\n// 引入代码自动提示插件\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/sql-hint';\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/display/panel';\n// 尝试获取全局实例\nconst CodeMirror = window.CodeMirror || _CodeMirror;\nimport DiffMatchPatch from 'diff-match-patch';\n// import './codeMirrorModal/revised-search'\nimport './search';\n\n// eslint-disable-next-line camelcase\nwindow.diff_match_patch = DiffMatchPatch;\nwindow.DIFF_DELETE = -1;\nwindow.DIFF_INSERT = 1;\nwindow.DIFF_EQUAL = 0;\nexport default {\n  name: 'djJson',\n  props: {\n    width: {\n      type: String || Number,\n      default: ''\n    },\n    height: {\n      type: String || Number,\n      default: ''\n    },\n    // 外部传入的内容，用于实现双向绑定\n    value: String,\n    valueLeft: {\n      type: String,\n      default: null\n    },\n    valueRight: {\n      type: String,\n      default: null\n    },\n    jsonFormat: {\n      type: Boolean,\n      default: true\n    },\n    // 语言\n    language: {\n      type: String,\n      default: 'javascript'\n    },\n    // 主题\n    theme: {\n      type: String,\n      default: 'eclipse'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // changeStatus: {\n    //   type: Boolean,\n    //   default: false\n    // },\n    // 代码对比\n    diff: {\n      type: Boolean,\n      default: false\n    },\n    // 左侧配置\n    leftConfig: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    // 左侧配置\n    configParams: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    // 右侧配置\n    rightConfig: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    // 行高亮\n    markText: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    // 选中\n    selectionLine: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    // 行标记\n    gutterMarker: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    // 视图跳转到某行\n    scrollIntoView: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    // 焦点到某行\n    setCursorLine: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      changeStatus: 0,\n      mapArray: [],\n      // 内部真实的内容\n      code: '',\n      // 编辑器实例\n      coder: null,\n      // 默认配置\n      options: {\n        // 缩进格式\n        // tabSize: 2,\n        // 显示行号\n        lineNumbers: true,\n        line: true,\n        tabSize: 4,\n        /* extraKeys: { // 触发按键\n           'Ctrl': 'autocomplete'\n         },*/\n        // mode: {name: 'javascript', json: true},\n        // theme: \"eclipse\",\n        styleActiveLine: true,\n        foldgutter: true,\n        gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers', 'breakpoints', 'note-gutter'],\n        lineWrapping: true,// 代码折叠\n        foldGutter: true,\n        matchBrackets: true,// 括号匹配\n        autoCloseBrackets: true,\n        textWrapping: true\n        // highlightSelectionMatches: {showToken: true, annotateScrollbar: false}\n        // highlightSelectionMatches: {\n        //   minChars: 2,\n        //   showToken:/\\b(java)\\b/,\n        //   style:'matchhighlight',\n        //   annotateScrollbar: true\n        // }\n      },\n      origLeft: null,\n      origRight: null\n    };\n  },\n  computed: {\n    tooltipId() {\n      return `dj-json-${Math.floor(Math.random() * 10000)}`;\n    },\n    jsonValue() {\n      return this.getJsonValue(this.value);\n    },\n    jsonValueLeft() {\n      return this.getJsonValue(this.valueLeft);\n    },\n    jsonValueRight() {\n      return this.getJsonValue(this.valueRight);\n    }\n  },\n  mounted() {\n    // console.log(this.value, 'mounted code编辑器')\n    // 初始化\n    // console.log(window.CodeMirror,CodeMirror,CodeMirror?.modeInfo,'1111111');\n    for (let i = 0; i < CodeMirror?.modeInfo?.length; i++) {\n      let modeInfo = CodeMirror.modeInfo[i];\n      this.mapArray.push({name: modeInfo.name, modeId: modeInfo.mode});\n    }\n    // console.log(this.mapArray, 'mapArray');\n    if (this.diff) {\n      this.origLeft = this.jsonValueLeft;\n      this.code = this.jsonValue;\n      this.origRight = this.jsonValueRight;\n      this.initDiff(this.jsonValueLeft, this.jsonValue, this.jsonValueRight);\n    } else {\n      this.init();\n    }\n    this.themeChange();\n    this.modeChange();\n    this.sizeChange();\n  },\n  watch: {\n    'configParams.readOnly': {\n      handler(val, oldVal) {\n        // console.log(val, oldVal,'configParams11');\n        this.watchConfigFun(val, oldVal, 'configParams', 'readOnly');\n      },\n      deep: true\n    },\n    'leftConfig.readOnly': {\n      handler(val, oldVal) {\n        // console.log(val, oldVal,'leftConfig');\n        this.watchConfigFun(val, oldVal, 'leftConfig', 'readOnly');\n      },\n      deep: true\n    },\n    'rightConfig.readOnly': {\n      handler(val, oldVal) {\n        // console.log(val, oldVal,'rightConfig');\n        this.watchConfigFun(val, oldVal, 'rightConfig', 'rightConfig');\n      },\n      deep: true\n    },\n    value(val) {\n      /* console.log(this.valueLeft, val, 'value=====');\n      if (this.diff) {\n        if (this.coder?.edit) {\n          this.changeStatusFun(this.coder?.edit, true, this.value);\n        }\n      } else {\n        this.changeStatusFun(this.coder, true, this.value);\n      }*/\n      if (this.value != this.code) {\n        this.updated();\n      }\n    },\n    /* code(val) {\n     // console.log(val, 'code=====');\n    },*/\n    valueLeft(val) {\n      if (this.valueLeft != this.origLeft) {\n        this.updated();\n      }\n      /* console.log(val, 'valueLeft=====');\n      this.origLeft = val;\n      this.changeStatusFun(this.coder?.left?.orig, true, this.valueLeft);\n      // console.log(val, this.valueLeft, 'valueLeft');\n      // if (this.diff) {\n      //   this.initDiff(this.origLeft, this.value, this.origRight)\n      // }*/\n    },\n    valueRight(val) {\n      if (this.valueRight != this.origRight) {\n        this.updated();\n      }\n      /* this.origRight = val;\n      // if (this.diff) {\n      //   this.initDiff(this.origLeft, this.value, this.origRight)\n      // }\n      if (this.coder?.right?.orig) {\n        this.changeStatusFun(this.coder?.right?.orig, true, this.valueRight);\n      }*/\n    },\n    theme() {\n      this.themeChange();\n    },\n    language(val) {\n      // console.log(this.language, 'language');\n      this.modeChange();\n    },\n    changeStatus(val) {\n      // console.log(val,'changeStatus');\n      if (this.diff) {\n        if (this.coder?.left?.orig) {\n          this.changeStatusFun(this.coder?.left?.orig, val, this.jsonValueLeft);\n        }\n        if (this.coder?.edit) {\n          this.changeStatusFun(this.coder?.edit, val, this.jsonValue);\n        }\n        if (this.coder?.right?.orig) {\n          this.changeStatusFun(this.coder?.right?.orig, val, this.jsonValueRight);\n        }\n      } else {\n        /* if (val === false) {\n          this.coder.setValue('');\n        } else {\n          this.coder.setValue(this.value || '');\n        }*/\n        this.changeStatusFun(this.coder, val, this.jsonValue);\n      }\n      // console.log(val, this.value, 'changeStatus=====');\n    }\n  },\n  methods: {\n    watchConfigFun(val, oldVal, position, key) {\n      // console.log(val, oldVal);\n      let coder = this.getCoder(position);\n      if (val !== oldVal) {\n        this.readOnlyFun(coder, this[position][key]);\n      }\n    },\n    getCoder(key) {\n      let coder;\n      if (this.diff) {\n        if (key === 'leftConfig') {\n          coder = this.coder?.left?.orig;\n        } else if (key === 'rightConfig') {\n          coder = this.coder?.right?.orig;\n        } else {\n          coder = this.coder?.edit;\n        }\n      } else {\n        coder = this.coder;\n      }\n      return coder;\n    },\n    getJsonValue(val) {\n      if (this.jsonFormat) {\n        if (val && typeof val === 'string') {\n          try {\n            var obj = JSON.parse(val);\n            if (typeof obj === 'object' && obj) {\n              return JSON.stringify(obj, null, '\\t');\n            }\n            return val;\n          } catch (e) {\n            return val;\n          }\n        }\n        return val;\n      }\n      return val;\n    },\n    updated() {\n      this.changeStatus++;\n    },\n    changeStatusFun(coder, changeStatus, val) {\n      coder.setValue(val || '');\n      /* if (changeStatus === false) {\n        coder.setValue('');\n      } else {\n        coder.setValue(val || '');\n      }*/\n    },\n    getJson() {\n      // console.log(this.origLeft, '\\n', this.code, '\\n', this.origRight, 'getJson');\n    },\n    initDiff(origLeft, value, origRight) {\n      if (value === null) {\n        return;\n      }\n      let target = document.getElementById('dj-json-view');\n      target.innerHTML = '';\n      // eslint-disable-next-line new-cap\n      this.coder = CodeMirror.MergeView(target, {\n        value: value,\n        origLeft: origLeft !== null ? origLeft : null,\n        orig: origRight !== null ? origRight : null,\n        cursorHeight: 1, // 光标高度\n        lineNumbers: true,\n        allowEditingOriginals: true,\n        matchBrackets: true,// 匹配括号\n        // revertButtons: true, // 是否显示还原按钮\n        // searchbox: true\n        ...this.options\n        // highlightDifferences: \"highlight\",//有差异的地方是否高亮\n        // connect: null,\n        // revertButtons: false,//revert按钮设置为true可以回滚\n        // styleActiveLine: true,//光标所在的位置代码高亮\n        // smartIndent: true, // 智能缩进\n        // matchBrackets: true, // 括号匹配\n        // textWrapping: true,\n        // foldGutter:true,//代码折叠\n        // lineWrapping:true,//代码折叠\n        // gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"]\n      });\n      // console.log(this.coder, 'this.coder');\n      this.themeChange();\n      if (origLeft !== null) {\n        this.readOnlyFun(this.coder.left.orig, this.leftConfig?.readOnly);\n        this.markTextFun(this.coder.left.orig, this.leftConfig?.markText);\n        this.gutterMarkerFun(this.coder.left.orig, this.leftConfig?.gutterMarker);\n        this.setSelectionFun(this.coder.left.orig, this.leftConfig?.selectionLine);\n        this.codeChange(this.coder.left.orig, 'origLeft');\n\n      }\n      if (value !== null) {\n        this.readOnlyFun(this.coder.edit, this.configParams?.readOnly);\n        this.markTextFun(this.coder.edit, this.configParams?.markText);\n        this.gutterMarkerFun(this.coder.edit, this.configParams?.gutterMarker);\n        this.setSelectionFun(this.coder.edit, this.configParams?.selectionLine);\n        this.codeChange(this.coder.edit, 'code');\n      }\n      if (origRight !== null) {\n        this.readOnlyFun(this.coder.right.orig, this.rightConfig?.readOnly);\n        this.markTextFun(this.coder.right.orig, this.rightConfig?.markText);\n        this.gutterMarkerFun(this.coder.right.orig, this.rightConfig?.gutterMarker);\n        this.setSelectionFun(this.coder.right.orig, this.rightConfig?.selectionLine);\n        this.codeChange(this.coder.right.orig, 'origRight');\n      }\n      // this.coder.edit.scrollIntoView({line:100, ch: 11});\n    },\n    codeChange(coder, key) {\n      coder.on('change', (coder) => {\n        this[key] = coder.getValue();\n        if (this.$emit) {\n          this.$emit('codeChange', this.origLeft, this.code, this.origRight);\n        }\n      });\n    },\n    // 主题\n    themeChange() {\n      // console.log(this.theme, 'this.theme');\n      let theme = this.theme || 'eclipse';\n      if (theme) {\n        require('codemirror/theme/' + theme + '.css');\n        if (this.diff) {\n          this.coder?.edit?.setOption('theme', theme);\n          this.coder?.left?.orig?.setOption('theme', theme);\n          this.coder?.right?.orig?.setOption('theme', theme);\n        } else {\n          this.coder?.setOption('theme', theme);\n        }\n      }\n    },\n    // 语言\n    modeChange() {\n      // console.log(this.language, 'this.language');\n      let mode = this.language || 'javascript';\n      if (mode) {\n        require('codemirror/mode/' + mode + '/' + mode);\n        if (this.diff) {\n          this.coder?.edit?.setOption('mode', mode);\n          this.coder?.left?.orig?.setOption('mode', mode);\n          this.coder?.right?.orig?.setOption('mode', mode);\n        } else {\n          this.coder?.setOption('mode', mode);\n        }\n      }\n    },\n    // 行高亮\n    readOnlyFun(coder, readOnly) {\n      coder.setOption('readOnly', readOnly);\n    },\n    // 大小\n    sizeChange() {\n      // let sia=this.height;\n      if (this.diff) {\n        this.coder?.edit?.setSize(this.width, this.height);\n        this.coder?.left?.orig?.setSize(this.width, this.height);\n        this.coder?.right?.orig?.setSize(this.width, this.height);\n        let mergeDom = document?.getElementById(this.tooltipId)?.querySelector('.CodeMirror-merge');\n        // console.log(mergeDom, 'mergeDom');\n        if (mergeDom && this.height) {\n          mergeDom.style.height = this.height;\n        }\n        /* if (this.width) {\n          mergeDom.style.width = this.width;\n        }*/\n      } else {\n        this.coder.setSize(this.width, this.height);\n      }\n    },\n    // 行高亮\n    markTextFun(coder, markTextArr) {\n      for (let i in markTextArr) {\n        coder.markText(markTextArr[i].start, markTextArr[i].end, markTextArr[i].element);\n      }\n    },\n    // 标记\n    makeMarker(color, innerHTML) {\n      var marker = document.createElement('div');\n      marker.style.color = color;\n      marker.innerHTML = innerHTML;\n      // marker.appendChild(innerHTML);\n      // console.log(color, innerHTML, marker, 'makeMarker');\n      return marker;\n    },\n    // 行标记\n    gutterMarkerFun(coder, gutterMarkerArr) {\n      for (let j in gutterMarkerArr) {\n        coder.setGutterMarker(gutterMarkerArr[j].line, 'note-gutter', this.makeMarker(gutterMarkerArr[j].color, gutterMarkerArr[j].innerHTML));\n      }\n      /* console.log(coder,gutterMarkerArr);\n      if (!gutterMarkerArr) {\n        let mergeDom = document?.getElementById(this.tooltipId)?.querySelector('.note-gutter');\n        mergeDom.classList.add('width0');\n        /!* let noteDom = document?.querySelectorAll('#'+this.tooltipId+' .note-gutter');\n        console.log(document?.getElementById(this.tooltipId),noteDom, 'noteDom');\n        // noteDom.add('width0');\n        for (let i in noteDom) {\n          if (noteDom[i] && noteDom[i].style) {\n            console.log(noteDom[i] , 'noteDom[i] ');\n            // noteDom[i].style.width = '0';\n            noteDom[i].classList.add('width0');\n          }\n        }*!/\n        // coder.refresh();\n      }*/\n    },\n    // 选中行\n    setSelectionFun(coder, setSelectionArr) {\n      for (let i in setSelectionArr) {\n        coder.setSelection(setSelectionArr[i].start, setSelectionArr[i].end);\n      }\n    },\n    // 焦点到某行\n    setCursorFun(coder, setCursorLine) {\n      if (setCursorLine) {\n        coder.setCursor(setCursorLine.line, setCursorLine.ch);\n        coder.focus();\n      }\n      // this.coder.setCursor(100,5);\n      // this.coder.focus();\n    },\n    // 焦点到某行\n    scrollIntoViewFun(coder, scrollIntoView) {\n      if (scrollIntoView) {\n        coder.scrollIntoView(scrollIntoView);\n      }\n    },\n    // 初始化\n    init() {\n      // console.log('init');\n      // 初始化编辑器实例，传入需要被实例化的文本域对象和默认配置\n      this.coder = CodeMirror.fromTextArea(this.$refs.textarea, this.options);\n      // 编辑器赋值\n      this.coder.setValue(this.jsonValue || this.code);\n      // console.log(this.value, this.code, '111111111')\n      // 支持双向绑定\n      this.coder.on('change', (coder) => {\n        this.code = coder.getValue();\n        if (this.$emit) {\n          this.$emit('input', this.code);\n        }\n      });\n      // console.log(this.coder, 'this.coder000')\n      this.$emit('languageList', this.mapArray);\n      /* let self=this;\n      this.coder.on('gutterClick', function (cm, n) {\n        var info = self.coder.lineInfo(n);\n       // console.log(self.coder, n, '11')\n        self.coder.setGutterMarker(n, \" breakpoints\", info.gutterMarkers ? null : self.makeMarker('orange', '<i class=\"iconfont home\"></i>'))\n      });*/\n\n      this.readOnlyFun(this.coder, this.configParams?.readOnly);\n      this.markTextFun(this.coder, this.configParams?.markText);\n      this.gutterMarkerFun(this.coder, this.configParams?.gutterMarker);\n      this.setSelectionFun(this.coder, this.configParams?.selectionLine);\n      // this.setCursorFun(this.coder, this.setCursorLine);\n      // this.scrollIntoViewFun(this.coder,this.scrollIntoView);\n      // this.coder.scrollIntoView({line:20, ch: 11});\n\n      /* this.coder.setGutterMarker(4, \"note-gutter\", this.makeMarker('orange', '<i class=\"iconfont home\"></i>'));\n      this.coder.setGutterMarker(5, \"note-gutter\", this.makeMarker('pink', '<i class=\"iconfont notification\"></i>'));*/\n      /* this.coder.markText({line: 0, ch: 0}, {line: 2, ch: 0}, {className: \"errorHighlight\"});\n      this.coder.markText({line: 3, ch: 0}, {line: 6, ch: 0}, {className: \"errorHighlight\"});\n      this.coder.markText({line: 13, ch: 0}, {line: 16, ch: 0}, {className: \"errorHighlight2\"});\n      this.coder.markText({line: 100, ch: 0}, {line: 101, ch: 0}, {className: \"errorHighlight2\"});*/\n      // this.coder.scrollIntoView({line:100, ch: 11});\n      // this.coder.setCursor(100,5);\n      // this.coder.focus();\n      // this.coder.options.highlightSelectionMatches = {showToken: true, annotateScrollbar: true};\n\n      // console.log(this.value, this.code, '222222222')\n      // 尝试从父容器获取语法类型\n      /* if (this.language) {\n        // 获取具体的语法类型对象\n        let modeObj = this._getLanguage(this.language);\n        // 判断父容器传入的语法是否被支持\n        if (modeObj) {\n          this.mode = modeObj.label;\n        }\n      }*/\n    },\n    // 获取当前语法类型\n    _getLanguage(language) {\n      // 在支持的语法类型列表中寻找传入的语法类型\n      return this.modes.find((mode) => {\n        // 所有的值都忽略大小写，方便比较\n        let currentLanguage = language.toLowerCase();\n        let currentLabel = mode.label.toLowerCase();\n        let currentValue = mode.value.toLowerCase();\n        // console.log(mode, language, '_getLanguage');\n        // 由于真实值可能不规范，例如 java 的真实值是 x-java ，所以讲 value 和 label 同时和传入语法进行比较\n        return currentLabel === currentLanguage || currentValue === currentLanguage;\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\">\n</style>\n"]}]}
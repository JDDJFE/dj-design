{"remainingRequest":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangjunxia/work-github/dj-design/packages/tree/src/tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangjunxia/work-github/dj-design/packages/tree/src/tree.vue","mtime":1673509764361},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjunxia/work-github/dj-design/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkcmFnZ2FibGUgZnJvbSAndnVlZHJhZ2dhYmxlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZGpUcmVlJywKICBjb21wb25lbnRzOiB7CiAgICBkcmFnZ2FibGUKICB9LAogIHByb3BzOiB7CiAgICB2YWx1ZTogQXJyYXksCiAgICBkcmFnZ2FibGU6IHsgLy8g5piv5ZCm5YWB6K645ouW5ou95o6S5bqPCiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgZHJhZ2xldmVsOiB7IC8vIOaYr+WQpuWFgeiuuOi3qOe6p+aLluaLveaOkuW6jwogICAgICB0eXBlOiBCb29sZWFuCiAgICB9LAogICAgZXhwYW5kZWRzOiB7IC8vIOaMh+WumumcgOimgeWxleW8gOeahOiKgueCuQogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10KICAgIH0sCiAgICBjaGVja2VkczogeyAvLyDliLblrprpgInmi6npobkKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAogICAgZHJhZ0Rpc2FibGU6IHsgLy8g56aB5q2i5ouW5Yqo6aG577yI5YaF5a6577ya5LiN5YWB6K646KKr5ouW5Yqo6aG555qEaWTvvIkKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAogICAgY2hlY2tNYXhDb3VudDogeyAvLyDmnIDlpJrpgInmi6npobkKICAgICAgdHlwZTogTnVtYmVyCiAgICB9LAogICAgbGV2ZWw6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdHJlZURhdGE6IFsKICAgICAgICB7CiAgICAgICAgICBpZDogMSwKICAgICAgICAgIGxhYmVsOiAn5bCP5a6255S1JywKICAgICAgICAgIGNoaWxkcmVuOiBbXQogICAgICAgIH0KICAgICAgXSwKICAgICAgdHJlZUV4cGFuZGVkczogW10sCiAgICAgIHRyZWVDaGVja2VkczogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbHVlOiB7IC8vIOebkeWQrHRyZWXmlbDmja7lj5jljJYKICAgICAgaGFuZGxlcjogZnVuY3Rpb24obywgbikgewogICAgICAgIGlmICh0aGlzLnRyZWVEYXRhICE9PSB0aGlzLnZhbHVlKSB7CiAgICAgICAgICB0aGlzLnRyZWVEYXRhID0gdGhpcy52YWx1ZTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgZGVlcDogdHJ1ZQogICAgfSwKICAgIHRyZWVEYXRhOiB7IC8vIOWQjOatpeaOkuW6j+WQjnRyZWXmlbDmja4KICAgICAgaGFuZGxlcjogZnVuY3Rpb24obywgbikgewogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy50cmVlRGF0YSk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0sCiAgICBleHBhbmRlZHM6IHsgLy8g55uR5ZCs5bGV5byA6aG5CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uKG8sIG4pIHsKICAgICAgICBpZiAodGhpcy5leHBhbmRlZHMgIT0gdGhpcy50cmVlRXhwYW5kZWRzKSB7CiAgICAgICAgICB0aGlzLnRyZWVFeHBhbmRlZHMgPSB0aGlzLmV4cGFuZGVkczsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgZGVlcDogdHJ1ZQogICAgfSwKICAgIC8vIHRyZWVFeHBhbmRlZHM6IHsgLy8g5ZCM5q2l5bGV5byA6aG5CiAgICAvLyAgIGhhbmRsZXI6IGZ1bmN0aW9uKG8sIG4pIHsKICAgIC8vICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6ZXhwYW5kZWRzJywgdGhpcy50cmVlRXhwYW5kZWRzKTsKICAgIC8vICAgfSwKICAgIC8vICAgZGVlcDogdHJ1ZQogICAgLy8gfSwKICAgIGNoZWNrZWRzOiB7IC8vIOebkeWQrOmAieaLqemhuQogICAgICBoYW5kbGVyOiBmdW5jdGlvbihvLCBuKSB7CiAgICAgICAgaWYgKHRoaXMuY2hlY2tlZHMgIT0gdGhpcy50cmVlQ2hlY2tlZHMpIHsKICAgICAgICAgIHRoaXMudHJlZUNoZWNrZWRzID0gdGhpcy5jaGVja2VkczsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgZGVlcDogdHJ1ZQogICAgfSwKICAgIHRyZWVDaGVja2VkczogeyAvLyDlkIzmraXpgInmi6npobkKICAgICAgaGFuZGxlcjogZnVuY3Rpb24obywgbikgewogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpjaGVja2VkcycsIHRoaXMudHJlZUNoZWNrZWRzKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdyb3VwTmFtZShwaWQpIHsgLy8g55So5LqO5ouW5ou95o6S5bqP5YiG57uE77yM5ZCM57uE5Y+v5o6S5bqPCiAgICAgIGlmICh0aGlzLmRyYWdsZXZlbCkgewogICAgICAgIHJldHVybiAnZGotdHJlZSc7CiAgICAgIH0KICAgICAgcmV0dXJuIGBkai10cmVlLSR7cGlkfWA7CiAgICB9LAogICAgb25FeHBhbmQobm9kZSkgeyAvLyDlsZXlvIDlrZDoioLngrkKICAgICAgaWYgKCFub2RlLmNoaWxkcmVuIHx8ICFub2RlLmNoaWxkcmVuLmxlbmd0aCkgewogICAgICAgIHRoaXMub25DaGVja2VkKG5vZGUpOwogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIGlmICh0aGlzLmlzRXhwYW5kKG5vZGUpKSB7CiAgICAgICAgdGhpcy4kcmVtb3ZlKHRoaXMudHJlZUV4cGFuZGVkcywgdGhpcy50cmVlRXhwYW5kZWRzLmZpbmQobiA9PiBuLmlkID09IG5vZGUuaWQpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnRyZWVFeHBhbmRlZHMucHVzaChub2RlKTsKICAgICAgfQogICAgICB0aGlzLiRlbWl0KCdleHBhbmRDaGFuZ2UnLCB0aGlzLmlzRXhwYW5kKG5vZGUpLCBub2RlLCB0aGlzLmxldmVsKTsKICAgIH0sCiAgICBpc0V4cGFuZChub2RlKSB7IC8vIOWIpOaWreiKgueCueaYr+WQpuWxleW8gAogICAgICBpZiAodGhpcy50cmVlRXhwYW5kZWRzLmZpbmQobiA9PiBuLmlkID09IG5vZGUuaWQpKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKICAgIG9uQ2hlY2tlZChub2RlKSB7IC8vIOmAieaLqeiKgueCuQogICAgICBsZXQgZXJyb3IgPSAnJzsKICAgICAgaWYgKHRoaXMuaXNDaGVjayhub2RlKSkgewogICAgICAgIHRoaXMuJHJlbW92ZSh0aGlzLnRyZWVDaGVja2VkcywgdGhpcy50cmVlQ2hlY2tlZHMuZmluZChjID0+IGMuaWQgPT0gbm9kZS5pZCkpOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hlY2tNYXhDb3VudCA9PSAxKSB7CiAgICAgICAgdGhpcy50cmVlQ2hlY2tlZHMgPSBbbm9kZV07CiAgICAgIH0gZWxzZSBpZiAoIXRoaXMuY2hlY2tNYXhDb3VudCB8fCB0aGlzLmNoZWNrTWF4Q291bnQgPiB0aGlzLnRyZWVDaGVja2Vkcy5sZW5ndGgpIHsKICAgICAgICB0aGlzLnRyZWVDaGVja2Vkcy5wdXNoKG5vZGUpOwogICAgICB9IGVsc2UgewogICAgICAgIGVycm9yID0gYOacgOWkmumAieaLqSR7dGhpcy5jaGVja01heENvdW50femhuWA7CiAgICAgIH0KICAgICAgaWYgKGVycm9yKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihg5pyA5aSa6YCJ5oupJHt0aGlzLmNoZWNrTWF4Q291bnR96aG5YCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kZW1pdCgnY2hlY2tDaGFuZ2UnLCB0aGlzLmlzQ2hlY2sobm9kZSksIG5vZGUsIHRoaXMubGV2ZWwpOwogICAgICB9CiAgICB9LAogICAgaXNDaGVjayhub2RlKSB7IC8vIOWIpOaWreiKgueCueaYr+WQpumAieS4rQogICAgICBpZiAodGhpcy50cmVlQ2hlY2tlZHMuZmluZChjID0+IGMuaWQgPT0gbm9kZS5pZCkpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgaXNDaGVja09yQ2hpbGRyZW4obm9kZSkgeyAvLyDliKTmlq3oioLngrnmiJbpgJLlvZLlrZDoioLngrnmmK/lkKbpgInkuK0KICAgICAgaWYgKHRoaXMuaXNDaGVjayhub2RlKSkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICAgIGlmICghdGhpcy5pc0V4cGFuZChub2RlKSAmJiBub2RlLmNoaWxkcmVuICYmIG5vZGUuY2hpbGRyZW4uZmluZChjaGlsZHJlbiA9PiB0aGlzLmlzQ2hlY2tPckNoaWxkcmVuKGNoaWxkcmVuKSA9PT0gdHJ1ZSkpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgb25TdGFydChlKSB7IC8vIOW8gOWni+aLluaLveaOkuW6jwogICAgfSwKICAgIG9uTW92ZShlLCBvcmlnaW5hbEV2ZW50KSB7IC8vIOaOkuW6j+S4rQogICAgICBpZiAodGhpcy5kcmFnRGlzYWJsZS5pbmRleE9mKGU/LnJlbGF0ZWRDb250ZXh0Py5lbGVtZW50Py5pZCkgPiAtMSB8fCB0aGlzLmRyYWdEaXNhYmxlLmluZGV4T2YoZT8uZHJhZ2dlZENvbnRleHQ/LmVsZW1lbnQ/LmlkKSA+IC0xKSByZXR1cm4gZmFsc2U7CiAgICAgIHJldHVybiB0cnVlOwogICAgfSwKICAgIG9uRW5kKGUpIHsgLy8g5o6S5bqP5a6M5oiQCiAgICAgIHRoaXMuJGVtaXQoJ2RyYWdlbmQnLCB0aGlzLnRyZWVEYXRhLCB0aGlzLmxldmVsKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"tree.vue","sourceRoot":"packages/tree/src","sourcesContent":["<template>\n  <draggable v-model=\"treeData\" :group=\"groupName(level)\" :disabled=\"!draggable\" animation=\"300\" :move=\"onMove\" @start=\"onStart\" @end=\"onEnd\" class=\"dj-tree\">\n    <div v-for=\"node in treeData\" :key=\"node.id\" class=\"dj-tree-node\" @click.stop=\"!node.disabled && onExpand(node)\">\n      <div class=\"dj-tree-node-item\" :style=\"`padding-left: ${level * 15 + (node.children && node.children.length ? 0 : 19)}px;`\" :class=\"{'dj-tree-node-item-checked': isCheckOrChildren(node), 'dj-tree-node-item-disabled': node.disabled, 'dj-tree-node-item-level1': level == 0}\">\n        <dj-icon v-if=\"node.children && node.children.length\" :icon=\"isExpand(node) ? 'turning-bottom' : 'turning-right'\"/>\n        <div class=\"dj-tree-node-item-text\"><slot v-bind=\"{node, level}\">{{node.label}}</slot></div>\n        <div class=\"dj-tree-node-item-right\" @click.stop><slot name=\"right\" v-bind=\"{node, level}\"></slot></div>\n      </div>\n      <dj-tree v-if=\"node.children && node.children.length && isExpand(node)\" v-model=\"node.children\"\n      :draggable=\"draggable\" :draglevel=\"draglevel\" :expandeds=\"treeExpandeds\" :checkeds.sync=\"treeCheckeds\"\n      :checkMaxCount=\"checkMaxCount\" :level=\"level + 1\" @checkChange=\"(checked, node, level) => $emit('checkChange', checked, node, level)\" @expandChange=\"(checked, node, level) => $emit('expandChange', checked, node, level)\" @dragend=\"(nodes, level) => $emit('dragend', nodes, level)\" :dragDisable=\"dragDisable\">\n        <template slot-scope=\"scope\">\n          <slot v-bind=\"scope\">{{scope.node.label}}</slot>\n        </template>\n        <template slot=\"right\" slot-scope=\"scope\">\n          <slot name=\"right\" v-bind=\"scope\"></slot>\n        </template>\n      </dj-tree>\n    </div>\n</draggable>\n</template>\n\n<script>\nimport draggable from 'vuedraggable';\n\nexport default {\n  name: 'djTree',\n  components: {\n    draggable\n  },\n  props: {\n    value: Array,\n    draggable: { // 是否允许拖拽排序\n      type: Boolean,\n      default: false\n    },\n    draglevel: { // 是否允许跨级拖拽排序\n      type: Boolean\n    },\n    expandeds: { // 指定需要展开的节点\n      type: Array,\n      default: () => []\n    },\n    checkeds: { // 制定选择项\n      type: Array,\n      default: () => []\n    },\n    dragDisable: { // 禁止拖动项（内容：不允许被拖动项的id）\n      type: Array,\n      default: () => []\n    },\n    checkMaxCount: { // 最多选择项\n      type: Number\n    },\n    level: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      treeData: [\n        {\n          id: 1,\n          label: '小家电',\n          children: []\n        }\n      ],\n      treeExpandeds: [],\n      treeCheckeds: []\n    };\n  },\n  computed: {\n  },\n  watch: {\n    value: { // 监听tree数据变化\n      handler: function(o, n) {\n        if (this.treeData !== this.value) {\n          this.treeData = this.value;\n        }\n      },\n      immediate: true,\n      deep: true\n    },\n    treeData: { // 同步排序后tree数据\n      handler: function(o, n) {\n        this.$emit('input', this.treeData);\n      },\n      deep: true\n    },\n    expandeds: { // 监听展开项\n      handler: function(o, n) {\n        if (this.expandeds != this.treeExpandeds) {\n          this.treeExpandeds = this.expandeds;\n        }\n      },\n      immediate: true,\n      deep: true\n    },\n    // treeExpandeds: { // 同步展开项\n    //   handler: function(o, n) {\n    //     this.$emit('update:expandeds', this.treeExpandeds);\n    //   },\n    //   deep: true\n    // },\n    checkeds: { // 监听选择项\n      handler: function(o, n) {\n        if (this.checkeds != this.treeCheckeds) {\n          this.treeCheckeds = this.checkeds;\n        }\n      },\n      immediate: true,\n      deep: true\n    },\n    treeCheckeds: { // 同步选择项\n      handler: function(o, n) {\n        this.$emit('update:checkeds', this.treeCheckeds);\n      },\n      deep: true\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    groupName(pid) { // 用于拖拽排序分组，同组可排序\n      if (this.draglevel) {\n        return 'dj-tree';\n      }\n      return `dj-tree-${pid}`;\n    },\n    onExpand(node) { // 展开子节点\n      if (!node.children || !node.children.length) {\n        this.onChecked(node);\n        return;\n      } else if (this.isExpand(node)) {\n        this.$remove(this.treeExpandeds, this.treeExpandeds.find(n => n.id == node.id));\n      } else {\n        this.treeExpandeds.push(node);\n      }\n      this.$emit('expandChange', this.isExpand(node), node, this.level);\n    },\n    isExpand(node) { // 判断节点是否展开\n      if (this.treeExpandeds.find(n => n.id == node.id)) {\n        return true;\n      }\n      return false;\n    },\n    onChecked(node) { // 选择节点\n      let error = '';\n      if (this.isCheck(node)) {\n        this.$remove(this.treeCheckeds, this.treeCheckeds.find(c => c.id == node.id));\n      } else if (this.checkMaxCount == 1) {\n        this.treeCheckeds = [node];\n      } else if (!this.checkMaxCount || this.checkMaxCount > this.treeCheckeds.length) {\n        this.treeCheckeds.push(node);\n      } else {\n        error = `最多选择${this.checkMaxCount}项`;\n      }\n      if (error) {\n        this.$message.error(`最多选择${this.checkMaxCount}项`);\n      } else {\n        this.$emit('checkChange', this.isCheck(node), node, this.level);\n      }\n    },\n    isCheck(node) { // 判断节点是否选中\n      if (this.treeCheckeds.find(c => c.id == node.id)) {\n        return true;\n      }\n      return false;\n    },\n    isCheckOrChildren(node) { // 判断节点或递归子节点是否选中\n      if (this.isCheck(node)) {\n        return true;\n      }\n      if (!this.isExpand(node) && node.children && node.children.find(children => this.isCheckOrChildren(children) === true)) {\n        return true;\n      }\n      return false;\n    },\n    onStart(e) { // 开始拖拽排序\n    },\n    onMove(e, originalEvent) { // 排序中\n      if (this.dragDisable.indexOf(e?.relatedContext?.element?.id) > -1 || this.dragDisable.indexOf(e?.draggedContext?.element?.id) > -1) return false;\n      return true;\n    },\n    onEnd(e) { // 排序完成\n      this.$emit('dragend', this.treeData, this.level);\n    }\n  }\n};\n</script>\n"]}]}